@{
    ViewData["Title"] = "Home Page";
}

<div class="content-wrapper">
    <div class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h1 class="m-0">@Localizer["Dashboard"]</h1>
                </div>
            </div>
        </div>
    </div>
    @*<div class="tab-loading">
    <div>
    <h2 class="display-4">Tab is loading <i class="fa fa-sync fa-spin"></i></h2>
    </div>
    </div>*@
    <div class="col-md-12">
        <!-- USER CHART -->
        <div class="card card-dark">
            <div class="card-header">
                <h3 class="card-title">User</h3>
                <div class="card-tools">
                    <button type="button" class="btn btn-tool" data-card-widget="collapse">
                        <i class="fas fa-minus"></i>
                    </button>
                    <button type="button" class="btn btn-tool" data-card-widget="remove">
                        <i class="fas fa-times"></i>
                    </button>
                </div>
            </div>
            <div class="card-body">
                <div class="content row">
                    <div class="col-lg-6">
                        <div class="card">
                            <div class="card-header border-0">
                                <div class="d-flex justify-content-between">
                                    <h3 class="card-title">Users Created</h3>
                                    <a href="javascript:void(0);">View Report</a>
                                </div>
                            </div>
                            <div class="card-body">
                                <div class="d-flex">
                                    <p class="d-flex flex-column">
                                        @{
                                            var totalUsers = 0;
                                            var percentUser = 0;
                                        }
                                        <span class="text-bold text-lg userByMonthTotal">Total Users: @totalUsers </span>
                                        <span>Users Over Time</span>
                                    </p>
                                    <p class="ml-auto d-flex flex-column text-right">
                                        <span class="text-success userByMonthPercent">
                                            <i class="fas fa-arrow-up"></i> @percentUser%
                                        </span>
                                        <span class="text-muted userByMonthSince">Since last month</span>
                                    </p>
                                </div>

                                <div class="position-relative mb-4" style="max-height: 300px;">
                                    <canvas id="user-created-by-month-chart" width="200" height="200"></canvas>
                                    <div class="loading">
                                        <div class="loader"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!-- /.card -->

                    </div>
                    <div class="col-lg-6">
                        <div class="card">
                            <div class="card-header border-0">
                                <div class="d-flex justify-content-between">
                                    <h3 class="card-title">Users Logon</h3>
                                    <a href="javascript:void(0);">View Report</a>
                                </div>
                            </div>
                            <div class="card-body">
                                <div class="d-flex">
                                    <p class="d-flex flex-column">
                                        @{
                                            var recentLogonUsers = 0;
                                            var percentUserLogonByTotal = 0;
                                        }
                                        <span class="text-bold text-lg userLogonRecent">Recent Logon Users: @recentLogonUsers </span>
                                        <span>Logged</span>
                                    </p>
                                    <p class="ml-auto d-flex flex-column text-right">
                                        <span class="text-success userLogonPercent">
                                            <i class="fas fa-arrow-up"></i> @percentUserLogonByTotal%
                                        </span>
                                        <span class="text-muted userLogon">Percent Users Logon / Total</span>
                                    </p>
                                </div>

                                <div class="position-relative mb-4" style="max-height: 300px;">
                                    <canvas id="user-login-by-day-chart" width="200" height="200"></canvas>
                                    <div class="loading">
                                        <div class="loader"></div>
                                    </div>
                                </div>

                            </div>
                        </div>
                        <!-- /.card -->

                    </div>
                </div>

            </div>
            <!-- /.card-body -->
        </div>

        <!-- TRANSACTIONS CHART -->
        <div class="card card-secondary">
            <div class="card-header">
                <h3 class="card-title">Transactions</h3>

                <div class="card-tools">
                    <button type="button" class="btn btn-tool" data-card-widget="collapse">
                        <i class="fas fa-minus"></i>
                    </button>
                    <button type="button" class="btn btn-tool" data-card-widget="remove">
                        <i class="fas fa-times"></i>
                    </button>
                </div>
            </div>
            <div class="card-body">
                <div class="content row">

                    <div class="col-lg-6">
                        <div class="card">
                            <div class="card-header border-0">
                                <div class="d-flex justify-content-between">
                                    <h3 class="card-title">Transactions / TransactionClass</h3>
                                    <a href="javascript:void(0);">View Report</a>
                                </div>
                            </div>
                            <div class="card-body">
                                <div class="d-flex">
                                    <p class="d-flex flex-column">
                                        @{
                                            var totalQuantity = 0;
                                            var totalBalance = 0;
                                        }
                                        <span class="text-bold text-lg transactionByClassAndTypeTotalQuantity">Total Quantity: @totalQuantity </span>
                                        <span>Quantity</span>
                                    </p>
                                    <p class="ml-auto d-flex flex-column text-right">
                                        <span class="transactionByClassAndTypeTotalBalance">
                                            <i class="fas fa-arrow-up"></i> @totalBalance
                                        </span>
                                        <span class="text-muted">Total Balance</span>
                                    </p>
                                </div>

                                <div class="position-relative mb-4" style="max-height: 300px;">
                                    <canvas id="transaction-by-class-and-type-chart" width="200" height="200"></canvas>
                                </div>

                            </div>

                        </div>
                        <!-- /.card -->

                    </div>
                    <div class="col-lg-6">
                        <div class="card">
                            <div class="card-header border-0">
                                <div class="d-flex justify-content-between">
                                    <h3 class="card-title">List TransactionClass</h3>
                                    <a href="javascript:void(0);">View Report</a>
                                </div>
                            </div>
                            <div class="card-body">
                                <div class="d-flex">
                                </div>

                                <div class="position-relative mb-4" style="max-height: 300px;">
                                    <div class="col-lg-6" id="transaction-by-class-and-type-container" style="width: 531px; height: 270px;"></div>

                                </div>

                            </div>

                        </div>
                        <!-- /.card -->

                    </div>
                </div>
            </div>

            <!-- /.card-body -->
        </div>
        <!-- /.card -->

    </div>
</div>
@section Css{
    <style>

    </style>
}

@section scripts{
    <script src="~/lib/waitme/waitMe.min.js"></script>

    <script>



        $(document).ready(function () {

            getUserLogonByDay();
            getUserCreateByMonth();
            getTransactionByClassAndType();

        });

        function getUserCreateByMonth() {


            $.ajax({
                url: 'http://syntaxinternal.azurewebsites.net:5069/api/dashboard/UserByMonth',
                method: 'GET',
                success: function (data) {

                    UserByMonth(data);
                }
            });

        };

        function UserByMonth(data) {
            var datasets = [];
            data.data.forEach(function (datum, i) {
                var color = i % 2 == 0 ? 'rgb(153, 102, 255)' : 'rgb(204, 51, 255)';
                datasets.push({
                    label: datum.role,
                    backgroundColor: color,
                    borderColor: color,
                    data: datum.counts,
                    barPercentage: 0.8,
                    categoryPercentage: 0.8
                });
            });

            var chartData = {
                labels: data.months.map(function (month) {
                    return month.charAt(0).toUpperCase() + month.slice(1);
                }),
                datasets: datasets
            };

            var ctx = document.getElementById('user-created-by-month-chart').getContext('2d');
            var userCreatedByMonthChart = new Chart(ctx, {
                type: 'bar',
                data: chartData,
                options: {
                    maintainAspectRatio: false,
                    responsive: true,
                    legend: {
                        display: true,
                        labels: {
                            fontColor: '#333',
                            fontSize: 14
                        }
                    },
                    scales: {
                        xAxes: [{
                            stacked: false,
                            ticks: {
                                fontColor: '#333',
                                fontSize: 14
                            },
                            gridLines: {
                                display: true,
                                color: '#ddd'
                            }
                        }],
                        yAxes: [{
                            stacked: false,
                            ticks: {
                                beginAtZero: true,
                                fontColor: '#333',
                                fontSize: 14,
                                stepSize: 1
                            },
                            gridLines: {
                                display: true,
                                color: '#ddd'
                            }
                        }]
                    }
                }
            });

            // Adicionando as informações de usuários no HTML
            var totalUsersElem = document.querySelector('.userByMonthTotal');
            totalUsersElem.innerHTML = 'Total Users: ' + data.totalUsers;

            var percentUserElem = document.querySelector('.userByMonthPercent');
            percentUserElem.innerHTML = '<i class="fas fa-arrow-up"></i> ' + data.percentUser + '%';


        }





        function getUserLogonByDay() {

            $.ajax({
                url: 'http://syntaxinternal.azurewebsites.net:5069/api/dashboard/UserLogonByDay',
                type: "GET",
                dataType: "json",
                success: function (data) {
                    mountUserLogin(data);
                },
                error: function () {
                    console.log("Erro ao buscar dados");
                }
            });
        }

        function mountUserLogin(data) {
            var ctx = document.getElementById('user-login-by-day-chart').getContext('2d');
            var chart = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: data.dates,
                    datasets: [{
                        label: 'User Logins',
                        data: data.logonCounts,
                        backgroundColor: 'rgba(153, 102, 255, 0.2)',
                        borderColor: 'rgba(153, 102, 255, 1)',
                        borderWidth: 1,
                        pointRadius: 3,
                        pointBackgroundColor: 'rgba(153, 102, 255, 1)',
                        pointBorderColor: 'rgba(153, 102, 255, 1)',
                        pointHoverRadius: 5,
                        pointHoverBackgroundColor: 'rgba(153, 102, 255, 1)',
                        pointHoverBorderColor: 'rgba(153, 102, 255, 1)'
                    }]
                },
                options: {
                    maintainAspectRatio: false,
                    responsive: true,
                    scales: {
                        yAxes: [{
                            ticks: {
                                min: 0,
                                beginAtZero: true,
                                callback: function (value) {
                                    if (value % 1 === 0) {
                                        return value;
                                    }
                                }
                            }
                        }]
                    }
                }
            });


            // Atualize as informações de recentLogonUsers e percentUserLogonByTotal
            $('.userLogonRecent').text('Recent Logon Users: ' + data.recentLogonUsers);
            $('.userLogonPercent').text(data.percentUserLogonByTotal + '%');

            // Redesenha o gráfico com as novas informações
            chart.data.datasets[0].data = data.logonCounts;
            chart.data.labels = data.dates;
            chart.update();


        }


        function getTransactionByClassAndType() {
            $.ajax({
                url: 'http://syntaxinternal.azurewebsites.net:5069/api/Dashboard/TransactionByClassAndType',
                method: 'GET',
                success: function (data) {
                    renderTransactionByClassAndType(data);
                }
            });
        }

        function renderTransactionByClassAndType(data) {
            var labels = [];
            var backgroundColors = [];
            var dataValues = [];

            data.forEach(function (datum, i) {
                var totalTypeQuantity = datum.typeQuantity.reduce(function (total, currentType) {
                    return total + currentType.quantity;
                }, 0);

                var typePercentages = datum.typeQuantity.map(function (type) {
                    var percentage = ((type.quantity / totalTypeQuantity) * 100).toFixed(2);
                    return percentage;
                });

                var label = datum.transactionClass + ' (' + typePercentages.join(', ') + '%)';
                labels.push(label);

                var color = getRandomColor();
                backgroundColors.push(color);

                var typeQuantities = datum.typeQuantity.map(function (type) {
                    return type.quantity;
                });

                dataValues.push(typeQuantities);
            });

            var chartData = {
                labels: labels,
                datasets: [{
                    data: dataValues,
                    backgroundColor: backgroundColors,
                    borderColor: '#fff'
                }]
            };

            var ctx = document.getElementById('transaction-by-class-and-type-chart').getContext('2d');
            var transactionByClassAndTypeChart = new Chart(ctx, {
                type: 'pie',
                data: chartData,
                options: {
                    maintainAspectRatio: false,
                    responsive: true,
                    legend: {
                        display: true,
                        labels: {
                            fontColor: '#333',
                            fontSize: 14
                        }
                    }
                }
            });

            var totalBalanceElem = document.querySelector('.transactionByClassAndTypeTotalBalance');
            var totalBalance = data[0].totalBalance;
            var balanceText = 'Total Balance: ';
            if (totalBalance < 0) {
                balanceText += '-R$' + (-totalBalance).toLocaleString('pt-BR', { minimumFractionDigits: 2, maximumFractionDigits: 2 });
                totalBalanceElem.classList.add('text-danger');
            } else {
                balanceText += 'R$' + totalBalance.toLocaleString('pt-BR', { minimumFractionDigits: 2, maximumFractionDigits: 2 });
                totalBalanceElem.classList.add('text-success');
            }
            totalBalanceElem.innerHTML = balanceText;

            var totalQuantityElem = document.querySelector('.transactionByClassAndTypeTotalQuantity');
            totalQuantityElem.innerHTML = 'Total Quantity: ' + data[0].totalQuantity;

            renderAssetClassList(data);
        }


        function renderAssetClassList(data) {
            var totalTypeQuantity = data.reduce(function (total, datum) {
                return total + datum.totalQuantity;
            }, 0);

            var assetClassListHtml = '<ul>';
            data.forEach(function (datum) {
                var percentage = ((datum.totalQuantity / totalTypeQuantity) * 100).toFixed(2) + '%';
                assetClassListHtml += '<li>' + datum.transactionClass + ': ' + percentage + '-' + ' Quantidade: ' + datum.totalQuantity + ' ' + '</li>';
            });
            assetClassListHtml += '</ul>';

            var container = document.querySelector('#transaction-by-class-and-type-container');
            container.insertAdjacentHTML('beforeend', assetClassListHtml);
        }

        function getRandomColor() {
            var letters = '0123456789ABCDEF';
            var color = '#';
            for (var i = 0; i < 6; i++) {
                color += letters[Math.floor(Math.random() * 16)];
            }
            return color;
        }

    </script>


    }
